"""Create books and reviews tables

Revision ID: 3aa36ca89275
Revises: 
Create Date: 2025-04-13 15:58:34.831152

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3aa36ca89275'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False, comment='Unique identifier for the book'),
    sa.Column('title', sa.String(length=255), nullable=False, comment='Title of the book'),
    sa.Column('author', sa.String(length=255), nullable=False, comment='Author(s) of the book'),
    sa.Column('genre', sa.String(length=100), nullable=True, comment='Genre of the book'),
    sa.Column('year_published', sa.Integer(), nullable=True, comment='Year the book was published'),
    sa.Column('summary', sa.Text(), nullable=True, comment='Synopsis or summary of the book (can be AI-generated)'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title', 'author', name='uq_book_title_author'),
    comment='Stores information about books in the library'
    )
    op.create_index('ix_book_genre_year', 'books', ['genre', 'year_published'], unique=False)
    op.create_index(op.f('ix_books_author'), 'books', ['author'], unique=False)
    op.create_index(op.f('ix_books_genre'), 'books', ['genre'], unique=False)
    op.create_index(op.f('ix_books_id'), 'books', ['id'], unique=False)
    op.create_index(op.f('ix_books_title'), 'books', ['title'], unique=False)
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False, comment='Unique identifier for the review'),
    sa.Column('book_id', sa.Integer(), nullable=False, comment='Foreign key referencing the reviewed book'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Identifier for the user who wrote the review (assuming external user system)'),
    sa.Column('review_text', sa.Text(), nullable=True, comment='The text content of the review'),
    sa.Column('rating', sa.Float(), nullable=False, comment="User's rating for the book (e.g., 0.0 to 5.0)"),
    sa.CheckConstraint('rating >= 0 AND rating <= 5', name='chk_review_rating_range'),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Stores user reviews and ratings for books'
    )
    op.create_index('ix_review_user_id', 'reviews', ['user_id'], unique=False)
    op.create_index(op.f('ix_reviews_book_id'), 'reviews', ['book_id'], unique=False)
    op.create_index(op.f('ix_reviews_id'), 'reviews', ['id'], unique=False)
    op.create_index(op.f('ix_reviews_user_id'), 'reviews', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reviews_user_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_book_id'), table_name='reviews')
    op.drop_index('ix_review_user_id', table_name='reviews')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_books_title'), table_name='books')
    op.drop_index(op.f('ix_books_id'), table_name='books')
    op.drop_index(op.f('ix_books_genre'), table_name='books')
    op.drop_index(op.f('ix_books_author'), table_name='books')
    op.drop_index('ix_book_genre_year', table_name='books')
    op.drop_table('books')
    # ### end Alembic commands ###
